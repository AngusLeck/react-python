{"version":3,"file":"static/js/555.28bbfcce.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/comlink/src/comlink.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_arrayWithoutHoles","_construct","Parent","args","Class","Reflect","construct","bind","a","push","apply","instance","Function","prototype","arguments","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","from","_iterableToArrayLimit","_i","_s","_x","_r","_arr","_n","_d","_nonIterableRest","_nonIterableSpread","_setPrototypeOf","p","setPrototypeOf","__proto__","_slicedToArray","_toConsumableArray","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPropertyKey","arg","_typeof","constructor","_unsupportedIterableToArray","minLen","toString","slice","name","test","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","_MessageChannel","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","target","_ref","Error","isError","message","stack","serialized","assign","ep","globalThis","allowedOrigins","addEventListener","callback","ev","data","origin","_step","_iterator","allowedOrigin","RegExp","isAllowedOrigin","returnValue","_Object$assign","path","id","type","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","proxy","_MessageChannel2","transfers","transferCache","set","transfer","Promise","resolve","catch","then","_toWireValue","toWireValue","_toWireValue2","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","error","_toWireValue3","_toWireValue4","console","warn","concat","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","_target","unregister","unregisterProxy","r","_toWireValue6","_toWireValue7","_thisArg","rawArgumentList","last","_processArguments","processArguments","_processArguments2","_processArguments3","_processArguments4","register","registerProxy","processed","v","_step2","_iterator2","_step2$value","handler","_handler$serialize","_handler$serialize2","msg","fill","Math","floor","random","MAX_SAFE_INTEGER","join","l"],"sourceRoot":""}